name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js for server
        uses: actions/setup-node@v3
        with:
          node-version: "21"

      - name: Install dependencies for server
        run: |
          cd server
          npm install

      - name: Set up Node.js for client
        uses: actions/setup-node@v3
        with:
          node-version: "21"

      - name: Install dependencies for client
        run: |
          cd client
          npm install

      - name: Build client
        run: |
          cd client
          npm run build

      - name: List client/build files
        run: |
          ls -la client/build

      - name: Build Docker image
        run: |
          cd server
          docker build -t ${{ secrets.DOCKER_USERNAME }}/cc-invest-cat .

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/cc-invest-cat

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Pull Docker image from Docker Hub
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/cc-invest-cat

      - name: Clean up unused Docker resources
        run: docker system prune -af

      - name: Deploy Docker container to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          echo "Creating SSH key file"
          echo "$SSH_PRIVATE_KEY" > ec2-key.pem
          chmod 600 ec2-key.pem
          echo "Connecting to EC2 and deploying Docker container"
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem $EC2_USER@$EC2_HOST '
            echo "Pulling Docker image"
            docker pull ${{ secrets.DOCKER_USERNAME }}/cc-invest-cat &&
            echo "Stopping existing container if any"
            docker stop app || true &&
            echo "Removing existing container if any"
            docker rm app || true &&
            echo "Running new Docker container"
            docker run -d --name app -p 443:3000 --env-file /home/ubuntu/.env ${{ secrets.DOCKER_USERNAME }}/cc-invest-cat'
